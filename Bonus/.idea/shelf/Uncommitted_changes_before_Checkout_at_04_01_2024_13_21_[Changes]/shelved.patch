Index: ../Emoticons/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import entities.Mensagem;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n        // testes\r\n\r\n//        Mensagem msg1 = new Mensagem(\"Espero que esteja tudo bem:-)\");\r\n//        Mensagem msg2 = new Mensagem(\"Achei o filme muito divertido\");\r\n//        Mensagem msg3 = new Mensagem(\":-):-(:-(:-)\");\r\n//        Mensagem msg4 = new Mensagem(\"Sonhei com a prova :-( (vou estudar)\");\r\n//        Mensagem msg5 = new Mensagem(\"\"); // neutro\r\n//        Mensagem msg6 = new Mensagem(\":)-\"); // neutro\r\n//        Mensagem msg7 = new Mensagem(\"-:)\"); // newutro\r\n//        Mensagem msg8 = new Mensagem(\":-)-:(\");// divertido\r\n//\r\n//        // testando o reconhecimento de humor\r\n//\r\n//        System.out.println(\"msg1: \" + msg1.getSentimento());\r\n//        System.out.println(\"msg2: \" +msg2.getSentimento());\r\n//        System.out.println(\"msg3: \" +msg3.getSentimento());\r\n//        System.out.println(\"msg4: \" +msg4.getSentimento());\r\n//        System.out.println(\"msg5: \" +msg5.getSentimento());\r\n//        System.out.println(\"msg6: \"  +msg6.getSentimento());\r\n//        System.out.println(\"msg7: \" +msg7.getSentimento());\r\n//        System.out.println(\"msg8: \" +msg8.getSentimento());\r\n//\r\n//        // testando  a edição de texto\r\n//\r\n//        System.out.println(\"\\n\");\r\n//        msg1.editarTexto(\"Espero que esteja tudo bem:-\");\r\n//        System.out.println(\"msg1 (editada): \" +msg1.getSentimento());\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        System.out.print(\"Digite uma menssagem: \");\r\n        String texto = sc.nextLine();\r\n\r\n        Mensagem mensagem = new Mensagem(texto);\r\n        System.out.println(mensagem.verificaHumor());\r\n        sc.close();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Emoticons/src/Main.java b/../Emoticons/src/Main.java
--- a/../Emoticons/src/Main.java	
+++ b/../Emoticons/src/Main.java	
@@ -1,43 +1,10 @@
 import entities.Mensagem;
-
 import java.util.Scanner;
-
 public class Main {
     public static void main(String[] args) {
-
-        // testes
-
-//        Mensagem msg1 = new Mensagem("Espero que esteja tudo bem:-)");
-//        Mensagem msg2 = new Mensagem("Achei o filme muito divertido");
-//        Mensagem msg3 = new Mensagem(":-):-(:-(:-)");
-//        Mensagem msg4 = new Mensagem("Sonhei com a prova :-( (vou estudar)");
-//        Mensagem msg5 = new Mensagem(""); // neutro
-//        Mensagem msg6 = new Mensagem(":)-"); // neutro
-//        Mensagem msg7 = new Mensagem("-:)"); // newutro
-//        Mensagem msg8 = new Mensagem(":-)-:(");// divertido
-//
-//        // testando o reconhecimento de humor
-//
-//        System.out.println("msg1: " + msg1.getSentimento());
-//        System.out.println("msg2: " +msg2.getSentimento());
-//        System.out.println("msg3: " +msg3.getSentimento());
-//        System.out.println("msg4: " +msg4.getSentimento());
-//        System.out.println("msg5: " +msg5.getSentimento());
-//        System.out.println("msg6: "  +msg6.getSentimento());
-//        System.out.println("msg7: " +msg7.getSentimento());
-//        System.out.println("msg8: " +msg8.getSentimento());
-//
-//        // testando  a edição de texto
-//
-//        System.out.println("\n");
-//        msg1.editarTexto("Espero que esteja tudo bem:-");
-//        System.out.println("msg1 (editada): " +msg1.getSentimento());
-
         Scanner sc = new Scanner(System.in);
-
         System.out.print("Digite uma menssagem: ");
         String texto = sc.nextLine();
-
         Mensagem mensagem = new Mensagem(texto);
         System.out.println(mensagem.verificaHumor());
         sc.close();
Index: ../Emoticons/src/entities/Mensagem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entities;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Mensagem {\r\n\r\n    private String texto;\r\n    private String sentimento;\r\n\r\n\r\n    public Mensagem(String texto) {\r\n        this.texto = texto;\r\n        this.sentimento = verificaHumor();\r\n    }\r\n\r\n    public String getTexto() {\r\n        return texto;\r\n    }\r\n\r\n    public void editarTexto(String texto) {\r\n        this.texto = texto;\r\n        this.sentimento = verificaHumor();\r\n    }\r\n\r\n    public String getSentimento() {\r\n        return sentimento;\r\n    }\r\n\r\n    public String verificaHumor() {\r\n        String padrao1 = \":-\\\\)\";\r\n        String padrao2 = \":-\\\\(\";\r\n\r\n        // Convertendo a string para minúsculas para uma correspondência sem diferenciação de maiúsculas/minúsculas\r\n        texto = texto.toLowerCase();\r\n\r\n        // Contagem da primeira ocorrência de emoticon\r\n        long contadorPadrao1 = contarOcorrencias(texto, padrao1);\r\n\r\n        // Contagem da segunda ocorrência de emoticon\r\n        long contadorPadrao2 = contarOcorrencias(texto, padrao2);\r\n\r\n\r\n        // Comparando as contagens\r\n        if (contadorPadrao1 > contadorPadrao2) {\r\n            return \"divertido\";\r\n        } else if (contadorPadrao2 > contadorPadrao1) {\r\n            return \"chateado\";\r\n        }\r\n        return \"neutro\";\r\n\r\n    }\r\n    // Função para contar ocorrências de um padrão na string usando Matcher\r\n    public static long contarOcorrencias(String texto, String padrao) {\r\n        Pattern pattern = Pattern.compile(padrao);\r\n        Matcher matcher = pattern.matcher(texto);\r\n\r\n        int contador = 0;\r\n        while (matcher.find()) {\r\n            contador++;\r\n        }\r\n        return contador;\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Emoticons/src/entities/Mensagem.java b/../Emoticons/src/entities/Mensagem.java
--- a/../Emoticons/src/entities/Mensagem.java	
+++ b/../Emoticons/src/entities/Mensagem.java	
@@ -1,65 +1,51 @@
 package entities;
+
+
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-
 public class Mensagem {
-
     private String texto;
     private String sentimento;
 
-
     public Mensagem(String texto) {
         this.texto = texto;
-        this.sentimento = verificaHumor();
+        this.sentimento = this.verificaHumor();
     }
 
     public String getTexto() {
-        return texto;
+        return this.texto;
     }
 
     public void editarTexto(String texto) {
         this.texto = texto;
-        this.sentimento = verificaHumor();
+        this.sentimento = this.verificaHumor();
     }
 
     public String getSentimento() {
-        return sentimento;
+        return this.sentimento;
     }
 
     public String verificaHumor() {
         String padrao1 = ":-\\)";
         String padrao2 = ":-\\(";
-
-        // Convertendo a string para minúsculas para uma correspondência sem diferenciação de maiúsculas/minúsculas
-        texto = texto.toLowerCase();
-
-        // Contagem da primeira ocorrência de emoticon
-        long contadorPadrao1 = contarOcorrencias(texto, padrao1);
-
-        // Contagem da segunda ocorrência de emoticon
-        long contadorPadrao2 = contarOcorrencias(texto, padrao2);
-
-
-        // Comparando as contagens
+        this.texto = this.texto.toLowerCase();
+        long contadorPadrao1 = contarOcorrencias(this.texto, padrao1);
+        long contadorPadrao2 = contarOcorrencias(this.texto, padrao2);
         if (contadorPadrao1 > contadorPadrao2) {
             return "divertido";
-        } else if (contadorPadrao2 > contadorPadrao1) {
-            return "chateado";
+        } else {
+            return contadorPadrao2 > contadorPadrao1 ? "chateado" : "neutro";
         }
-        return "neutro";
-
     }
-    // Função para contar ocorrências de um padrão na string usando Matcher
+
     public static long contarOcorrencias(String texto, String padrao) {
         Pattern pattern = Pattern.compile(padrao);
         Matcher matcher = pattern.matcher(texto);
 
-        int contador = 0;
-        while (matcher.find()) {
-            contador++;
+        int contador;
+        for(contador = 0; matcher.find(); ++contador) {
         }
-        return contador;
+
+        return (long)contador;
     }
 }
-
-
